(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{93:function(e,t,a){"use strict";a.r(t);var n=a(0),o=function(e){var t,a,n,o,s,i,p,r,c=(t=void 0,a="YikesScript",n="TypeScript",o={},s="/tags/typescript",i=new Date(1663008039734),p={},r="post",o.type="page",o.internal=t,o.contentType="default",o.isTagPage=!0,o.layout="tag",o.permalink=s,o.slug="typescript",o.createdAt=i,o.updatedAt=i,o.posts=[p],o.pagination={hasPrev:!1,hasNext:!1,total:1,current:1,prevLink:"/tags/typescript/page/2",nextLink:t},o.tag=n,o.assets={},o.attributes=o,o.content=t,p.type=r,p.internal=t,p.contentType="markdown",p.slug=a,p.content=t,p.createdAt=new Date(1632528e6),p.updatedAt=new Date(1663008005060),p.layout=r,p.title=a,p.date="2021-9-25",p.tags=[n],p.markdownHeadings=[{text:a,slug:"yikesscript",level:1}],p.excerpt="<p>Recently at work an seemingly innocuous dependecy bump caused a rash of typescript errors to appear throughout our code base. The changes seemed benign -  a new method in an internal library and a few dependabot updates to go with it. Nothing, it seemed, that should cause <em>these</em> errors:</p>\n",p.permalink="/posts/YikesScript.html",p.assets={},p.attributes=p,p.tagsInfo=[{name:n,permalink:s}],o),u=e.options.beforeCreate||[];e.options.beforeCreate=[function(){this.$page=c}].concat(u);["layout","transition"].forEach((function(t){var a=e.options.PageComponent;a&&(e.options[t]=a[t]),void 0===e.options[t]&&(e.options[t]=c[t])})),c.slug&&(e.options.name="page-wrapper-"+c.slug.replace(/[^0-9a-z\-]/gi,"-"))},s=Object(n.a)({},(function(){var e=this.$createElement;return(this._self._c||e)("layout-manager")}),[],!1,null,null,null);"function"==typeof o&&o(s);t.default=s.exports}}]);
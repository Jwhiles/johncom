datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Comment {
  id          String   @id @default(cuid())
  authorEmail String
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  emailConfirmed Boolean @default(false)
  approved       Boolean @default(false)

  content String

  postId String

  responses    Comment[] @relation("responseTo")
  responseTo   Comment?  @relation(name: "responseTo", fields: [responseToId], references: [id], onUpdate: Cascade)
  responseToId String?
}

model Admin {
<<<<<<< HEAD
  id        String    @id @default(cuid())
  email     String    @unique
  password  Password?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
=======
  id    String @id @default(cuid())
  email String @unique
  password             Password?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt

  microBlogs MicroBlog[]
>>>>>>> c7b02a0 (add the skeleton for the microblog)
}

model Password {
  hash String

  admin   Admin  @relation(fields: [adminId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adminId String @unique
}

model Webmention {
  target String
  source String

  authorName  String?
  authorPhoto String?
  authorUrl   String

  wmProperty  String
  contentText String?
  publishedAt DateTime?

  raw String

  approved Boolean @default(false)

  @@id([target, source])

model MicroBlog {
  id          String   @id @default(cuid())
  createdBy   Admin @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById     String 

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  content String
}
